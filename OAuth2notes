Generate OAuth2 token using Postman/JMeter

Servername or IP: login.microsoftonline.com
https path: {tenantID}/oauth2/v2.0/token
Request type: POST

So, the entire URL should look like this: https://login.microsoftonline.com/{tenantID}/oauth2/v2.0/token

Please pass the below http parameters as part of the request:

1) Approach is to create using Azure AD app's credentials. 

grant_type:client_credentials
client_id:{clientid}
client_secret:{client_secret}
scope:openid api://{clientid}/.default

client_id & client_secret are the AAD app registration credentials from Azure.

With that we get an access_token http responselike this:
{"token_type":"Bearer","expires_in":3599,"ext_expires_in":3599,"access_token":"{accesstoken}"}


2) Another approach to generate the OAuth 2 token using user credentials

grant_type: password
client_id : {clientid}
username : {username}
password: {password}
scope: openid api://{clientid}/.default

In this case, user account should be MFA disabled.


#Another approach is to use TOTP
https://stackoverflow.com/questions/73698316/how-to-generate-oauth-2-0-token-using-totp

Steps to login to site with OAuth 2.0 MFA enabled & TOTP approach:

- Create a user & get the username & password 
- Enable the MFA 
- Open the https://mysignins.microsoft.com/ & change Authentication type to Authenticator app 
  so that we can generate the OTP from the software.
- Also, copy the secret to generate the OTP.
- How to get the secret?
  - Login to mysignins.microsoft.com
  - Go to security - change to Authenticator app - Can't scan image and copy the secret.  
- Use that secret in here to generate OTP
   
  import pyotp
  totp = pyotp.TOTP('secret')
  otp = totp.now()
  print("Current OTP:", otp)

- This way we'll be able to login to our sie without any phone authentication
